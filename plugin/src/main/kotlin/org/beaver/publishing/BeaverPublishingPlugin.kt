/*
 * This source file was generated by the Gradle 'init' task
 */
package org.beaver.publishing

import nebula.plugin.publishing.maven.MavenNebulaPublishPlugin
import nebula.plugin.publishing.maven.MavenShadowPublishPlugin
import org.gradle.api.GradleException
import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.api.publish.PublishingExtension
import org.gradle.util.GradleVersion
import java.net.URI

/**
 *
 */
class BeaverPublishingPlugin: Plugin<Project> {

    private lateinit var project: Project

    override fun apply(project: Project) {
        if (GradleVersion.current() < GradleVersion.version("8.0")) {
            throw GradleException("This version of Beaver Plugin supports Gradle 8.0+ only. Please upgrade.")
        }
        this.project = project

        val ext = project.extensions.create(BeaverPublishingExtension::class.java, "beaverPublishing", BeaverPublishingExtension::class.java)
        configPublishing(ext)
    }

    private fun configPublishing(extension: BeaverPublishingExtension){
        if(extension.isFatJar.get()){
            project.plugins.apply(MavenShadowPublishPlugin::class.java)
        }else{
            project.plugins.apply(MavenNebulaPublishPlugin::class.java)
        }

        val publishing = project.extensions.getByType(PublishingExtension::class.java)

        publishing.repositories.maven {
            it.credentials.password = project.properties["repositoryPass"].toString()
            it.credentials.username = project.properties["repositoryUser"].toString()
            it.url = URI(extension.publishingURL.get())
        }
    }
}
